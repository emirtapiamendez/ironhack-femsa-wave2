openapi: 3.0.0
info:
  title: E-commerce API
  version: 1.0.0
  description: API para gestionar usuarios, clientes y pedidos de un e-commerce.
servers:
  - url: https://api.ecommerce.com/v1
    description: Servidor de producción

paths:
  /users:
    get:
      tags:
        - users
      summary: Obtener todos los usuarios
      description: Retorna una lista de todos los usuarios registrados.
      responses:
        "200":
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      tags:
        - users
      summary: Crear un nuevo usuario
      description: Registra un nuevo usuario en la plataforma.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Usuario creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /users/{userId}:
    get:
      tags:
        - users
      summary: Obtener un usuario
      description: Retorna información de un usuario específico por su ID.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        "200":
          description: Información del usuario
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Usuario no encontrado
    put:
      tags:
        - users
      summary: Actualizar usuario
      description: Actualiza la información de un usuario específico.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Usuario no encontrado
    delete:
      tags:
        - users
      summary: Eliminar usuario
      description: Elimina un usuario de la plataforma.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        "204":
          description: Usuario eliminado

  /clients:
    get:
      tags:
        - clients
      summary: Obtener todos los clientes
      description: Retorna una lista de todos los clientes.
      responses:
        "200":
          description: Lista de clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Client"
    post:
      tags:
        - clients
      summary: Crear un nuevo cliente
      description: Registra un nuevo cliente en la plataforma.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Client"
      responses:
        "201":
          description: Cliente creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"

  /orders:
    get:
      tags:
        - orders
      summary: Obtener todos los pedidos
      description: Retorna una lista de todos los pedidos realizados.
      responses:
        "200":
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
    post:
      tags:
        - orders
      summary: Crear un nuevo pedido
      description: Crea un nuevo pedido.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "201":
          description: Pedido creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "12345"
        username:
          type: string
          example: "usuario01"
        email:
          type: string
          example: "usuario@example.com"
        password:
          type: string
          format: password
          example: "password123"
      required:
        - username
        - email
        - password

    Client:
      type: object
      properties:
        id:
          type: string
          example: "67890"
        name:
          type: string
          example: "Cliente Ejemplo"
        email:
          type: string
          example: "cliente@example.com"
        phone:
          type: string
          example: "+123456789"
      required:
        - name
        - email

    Order:
      type: object
      properties:
        id:
          type: string
          example: "ABC123"
        clientId:
          type: string
          example: "67890"
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                example: "PROD001"
              quantity:
                type: integer
                example: 2
        status:
          type: string
          enum: ["pending", "shipped", "delivered", "cancelled"]
          example: "pending"
      required:
        - clientId
        - items
        - status
